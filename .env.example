# ! It is strongly recommended not to share your file with private keys with anyone. Do not push it in repositories.
# Store it locally.

# Uncomment the required lines and set parameters. See `README.md` for details.
# Note. The project configuration behaves correctly (for local development), even if the file `.env` does not exist.

# There you can paste one private key or several separated by a comma (,).
#ETHEREUM_MAINNET_KEYS = "0xabc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc1"
#ETHEREUM_TESTNET_KEYS = "0xabc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc1"
# By default the setting for the Polygon blockchain are commented (disabled) in the file `hardhat.config.ts`.
#POLYGON_MAINNET_KEYS = "0xabc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc1"
#POLYGON_TESTNET_KEYS = "0xabc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc1"

# Set the required URLs here. (Providers: Alchemy, Infura, Moralis (Chainstack), etc.).
#ETHEREUM_URL = "https://eth-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY"
#GOERLI_URL = "https://eth-goerli.alchemyapi.io/v2/YOUR_ALCHEMY_API_KEY"
#SEPOLIA_URL = "https://sepolia.infura.io/v3//YOUR_INFURA_API_KEY"
#POLYGON_URL = "https://polygon-mainnet.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY"
#MUMBAI_URL = "https://polygon-mumbai.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY"
#FORKING_URL = ""
# If you need to get Ethereum archive node for access to old blocks with `FORKING_BLOCK_NUMBER`, then
# see the link for Alchemy Supernode:
# https://www.alchemy.com/overviews/archive-nodes#free-archive-node-access-on-alchemy-2
# of use Infura, see for details: https://docs.infura.io/infura/features/archive-data.

# Keys for contract verification services.
#ETHERSCAN_API_KEY = "ABC123ABC123ABC123ABC123ABC123ABC1"
#POLYGONSCAN_API_KEY = "ABC123ABC123ABC123ABC123ABC123ABC1"

# Uncomment the line below to enable the solc compiler optimizer. It is turned on automatically during the gas report.
#ENABLED_OPTIMIZER = true
# The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time
# of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost
# after deployment). The maximum value is 2**32 - 1. This parameter does not specify the number of iterations of the
# optimizer. The optimizer will always run as many times as it can still improve the code. Equals to 200 by default.
#OPTIMIZER_RUNS = 99999

# Execute `$ npm run gas-report` to see the gas report. Or uncomment the line below to output it every time when
# running of the hardhat test command. It is disabled by default.
#REPORT_GAS = true
# Uncomment the line below to output this report in the `gas-report.txt` file.
#GAS_REPORT_TO_FILE = true
# Setting for access to price data via CoinMarketCap (https://coinmarketcap.com/).
# See the comments in `config.gasReporter` in the file `hardhat.config.ts` for details.
#COIN_MARKET_CAP_API_KEY = ""
#GAS_REPORTER_TOKEN_SYMBOL = "ETH"
#GAS_PRICE_API_URL = "https://api.etherscan.io/api?module=proxy&action=eth_gasPrice"

# Settings for the Hardhat network.
# Number of accounts. Default value: 20.
#NUMBER_OF_ACCOUNTS = "20"
# Balance that applied for each account. Default value: "10000000000000000000000" (10000 ETH).
#ACCOUNT_BALANCE = "10000000000000000000000"
# See the filed `config.networks.hardhat.hardfork` in the file `hardhat.config.ts` for details.
#HARDFORK = "arrowGlacier"

# Uncomment the line below this comment to start an instance of Hardhat Network that forks a network. This means that
# it will simulate having the same state as selected network. This is a way to interact with deployed protocols and
# test complex interactions locally. To use this feature you need to connect to an archive node (for example, with
# Alchemy or Infura). It is disabled by default.
#FORKING = true
# Set a number here if needed. By default fork from the latest block.
#FORKING_BLOCK_NUMBER = 123456789
